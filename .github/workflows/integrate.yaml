# reusable workflow triggered by other actions
name: CI

on:
  workflow_call:
    secrets:
      CHARMCRAFT_CREDENTIALS:
        required: true

jobs:
  lib-check:
    name: Check libraries
    strategy:
      matrix:
        charm:
        - jupyter-controller
        - jupyter-ui
    uses: canonical/charmed-kubeflow-workflows/.github/workflows/_quality-checks.yaml@main
    secrets: inherit
    with:
        charm-path: ./charms/${{ matrix.charm }}

  unit:
    name: Unit Test
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        charm: [controller, ui]
    steps:
    - uses: actions/checkout@v3
    - run: sudo apt update
    - run: sudo apt install tox
    - run: tox -e ${{ matrix.charm }}-unit

  charm-integration:
    name: Individual charm's integration tests
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        charm: [controller, ui]
    env:
      CRAFT_SHARED_CACHE: /home/runner/snap/charmcraft/common/cache/charmcraft/
    steps:
    - name: Check out code
      uses: actions/checkout@v3
    - name: Setup operator environment
      uses: charmed-kubernetes/actions-operator@main
      with:
          provider: microk8s
          channel: 1.25-strict/stable
          charmcraft-channel: latest/candidate
          microk8s-addons: "dns storage rbac metallb:10.64.140.43-10.64.140.49"
          juju-channel: 3.1/stable

    - name: Setup Charmcraft's cache
      id: cache
      uses: actions/cache@v4
      with:
        path: ${{ env.CRAFT_SHARED_CACHE }}
        # Cache keys must be unique - there is no overwrite mechanic.  Add IDs to avoid this (is there a better set of IDs?)
        # partial ref: https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache
        # To match the most recent previous cache, use restore-keys with the craft-shared-cache prefix.  This will hit the
        # "first" match, which will be from the most recent run.  
        # ref: https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows#matching-a-cache-key
        key: craft-shared-cache-${{ github.run_id }}-${{ github.run_attempt }}-${{ github.job }}-${{ strategy.job-index }}
        restore-keys: craft-shared-cache

    # DEBUG: remove this
    - name: emit charmcraft cache directory contents
      run: |
        find $CRAFT_SHARED_CACHE | wc -l
        find $CRAFT_SHARED_CACHE/wheels | wc -l

    - run: tox -e ${{ matrix.charm }}-integration

    # DEBUG: remove this
    - name: emit charmcraft cache directory contents
      run: |
        find $CRAFT_SHARED_CACHE | wc -l
        find $CRAFT_SHARED_CACHE/wheels | wc -l
  

  lint:
    name: Lint Code
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        charm: [controller, ui]
    steps:
    - uses: actions/checkout@v3
    - run: sudo apt update
    - run: sudo apt install tox
    - run: tox -e ${{ matrix.charm }}-lint

  bundle-integration:
    name: Bundle Integration
    runs-on: ubuntu-20.04
    env:
      CRAFT_SHARED_CACHE: /home/runner/snap/charmcraft/common/cache/charmcraft/
    steps:
    - name: Check out code
      uses: actions/checkout@v3
    - name: Setup operator environment
      uses: charmed-kubernetes/actions-operator@main
      with:
          provider: microk8s
          channel: 1.25-strict/stable
          charmcraft-channel: latest/candidate
          microk8s-addons: "dns storage rbac ingress metallb:10.64.140.43-10.64.140.49"
          juju-channel: 3.1/stable


    - name: Setup Charmcraft's cache
      id: cache
      uses: actions/cache@v4
      with:
        path: ${{ env.CRAFT_SHARED_CACHE }}
        # Cache keys must be unique - there is no overwrite mechanic.  Add IDs to avoid this (is there a better set of IDs?)
        # partial ref: https://github.com/actions/cache/blob/main/tips-and-workarounds.md#update-a-cache
        # To match the most recent previous cache, use restore-keys with the craft-shared-cache prefix.  This will hit the
        # "first" match, which will be from the most recent run.  
        # ref: https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows#matching-a-cache-key
        key: craft-shared-cache-${{ github.run_id }}-${{ github.run_attempt }}-${{ github.job }}-${{ strategy.job-index }}
        restore-keys: craft-shared-cache

    # DEBUG: remove this
    - name: emit charmcraft cache directory contents
      run: |
        find $CRAFT_SHARED_CACHE | wc -l
        find $CRAFT_SHARED_CACHE/wheels | wc -l

    - name: Run test
      run: |
        sudo apt install tar wget
        # Install firefox-geckodriver from source to avoid issues
        wget https://github.com/mozilla/geckodriver/releases/download/v0.28.0/geckodriver-v0.28.0-linux64.tar.gz
        tar xf geckodriver-v0.28.0-linux64.tar.gz
        sudo mv geckodriver /usr/local/bin
        juju add-model kubeflow
        sg snap_microk8s -c "tox -e integration -- --model kubeflow"

    # DEBUG: remove this
    - name: emit charmcraft cache directory contents
      run: |
        find $CRAFT_SHARED_CACHE | wc -l
        find $CRAFT_SHARED_CACHE/wheels | wc -l

    - run: kubectl get all -A
      if: failure()

    - run: kubectl get notebooks -A
      if: failure()

    - run: kubectl get pods -A -oyaml
      if: failure()

    - run: juju status
      if: failure()

    - name: Get jupyter-controller workload logs
      run: kubectl logs --tail 100 -nkubeflow -lapp.kubernetes.io/name=jupyter-controller
      if: failure()

    - name: Get jupyter-controller operator logs
      run: kubectl logs --tail 100 -nkubeflow -loperator.juju.is/name=jupyter-controller
      if: failure()

    - name: Get jupyter-ui workload logs
      run: kubectl logs --tail 100 -nkubeflow -lapp.kubernetes.io/name=jupyter-ui
      if: failure()

    - name: Get jupyter-ui operator logs
      run: kubectl logs --tail 100 -nkubeflow -loperator.juju.is/name=jupyter-ui
      if: failure()

    - name: Generate inspect tarball
      run: >
        sg microk8s <<EOF
          microk8s inspect | \
          grep -Po "Report tarball is at \K.+" | \
          xargs -I {} cp {} inspection-report-${{ strategy.job-index }}.tar.gz
        EOF
      if: failure()

    - name: Upload inspect tarball
      uses: actions/upload-artifact@v3
      with:
        name: inspection-reports
        path: ./inspection-report-${{ strategy.job-index }}.tar.gz
      if: failure()

    - name: Upload selenium screenshots
      uses: actions/upload-artifact@v3
      with:
        name: selenium-screenshots
        path: /tmp/selenium-*.png
      if: failure()

    - name: Upload HAR logs
      uses: actions/upload-artifact@v3
      with:
        name: selenium-har
        path: /tmp/selenium-*.har
      if: failure()
